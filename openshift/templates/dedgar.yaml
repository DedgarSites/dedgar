---
kind: Template
apiVersion: v1
metadata:
  name: dedgar
  annotations:
    description: Dedgar site deployment, written in Golang
    tags: quickstart,golang,dedgar
    iconClass: icon-golang
labels:
  template: dedgar
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Exposes and load balances the application pods
  spec:
    ports:
    - name: 443-tcp
      port: 443
      targetPort: ${TLS_PORT}
    selector:
      name: dedgar
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    labels:
      app: dedgar
    name: dedgar
    namespace: dedgar
  spec:
    host: ${APP_DOMAIN}
    port:
      targetPort: 443-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: dedgar
      weight: 100
- kind: ImageStream
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: dedgar
    name: dedgar
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: dedgar/${APP_NAME}:latest
      from:
        kind: DockerImage
        name: quay.io/dedgar/${APP_NAME}:latest
      importPolicy:
        scheduled: true
      name: "latest"
      referencePolicy:
        type: Source
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: dedgar
    annotations:
      description: Defines how to deploy the application server
  spec:
    strategy:
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - dedgar
        from:
          kind: ImageStreamTag
          name: dedgar:latest
    - type: ConfigChange
    replicas: 1
    selector:
      name: dedgar
    template:
      metadata:
        name: dedgar
        labels:
          name: dedgar
      spec:
        containers:
        - name: dedgar
          image: dedgar
          env:
          - name: PAUSE_ON_START
            value: "false"
          - name: LEGO_CERT
            value: "true"
          - name: TLS_PORT
            value: "${TLS_PORT}"
          - name: CERT_EMAIL
            value: "${CERT_EMAIL}"
          - name: APP_DOMAIN
            value: "${APP_DOMAIN}"
          - name: TLS_FILE_PATH
            value: "${TLS_FILE_PATH}"
          - name: CERT_FILENAME
            value: "${CERT_FILENAME}"
          - name: CERT_SERVER
            value: "${CERT_SERVER}"
          - name: CERT_FILE
            value: "${CERT_FILE}"
          - name: KEY_FILE
            value: "${KEY_FILE}"
          - name: DOWNLOAD_URL
            value: "${DOWNLOAD_URL}"
          - name: TLS_FILE_PATH
            value: "${TLS_FILE_PATH}"
          ports:
          - containerPort: "${TLS_PORT}" 
          volumeMounts:
          - mountPath: /opt/app-root/src/.aws
            name: dedgar-creds
          - mountPath: /secrets
            name: dedgar-secrets
        volumes:
        - name: dedgar-creds
          secret:
            secretName: dedgar-creds
        - name: dedgar-secrets
          secret:
            secretName: dedgar-secrets
parameters:
- name: APP_DOMAIN
  description: The exposed hostname that will route to the service, and be used with LetsEncrypt 
  value: 'www.dedgar.com'
- name: TLS_PORT
  description: Port that the application will use to listen for connections
  value: 8443
- name: CERT_EMAIL
  description: The email used with LetsEncrypt
  value: 'contact@shinobu.ninja'
- name: CERT_FILENAME
  description: The name of the certificate files generated by LetsEncrypt
  value: 'dedgar'
- name: CERT_SERVER
  description: The name of the LetsEncrypt CA server
  value: 'https://acme-v02.api.letsencrypt.org/directory'
- name: APP_NAME
  description: The name of the application to run from the start script and pull from the registry
  value: 'dedgar'
- name: CERT_FILE
  description: The name of the cert that we'll request from the download server
  value: 'dedgar.crt'
- name: KEY_FILE
  description: The name of the key that we'll request from the download server
  value: 'dedgar.key'
- name: DOWNLOAD_URL
  description: The URL of the certificate download server 
  value: 'https://cert.dedgarsite.svc:443/api/cert'
- name: TLS_FILE_PATH
  description: The directory that will hold the TLS .crt and .key files
  value: '/cert/'
